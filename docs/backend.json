
{
  "entities": {
    "UserProfile": {
      "title": "User Profile",
      "description": "Represents a user's profile information.",
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "The user's display name."
        },
        "email": {
          "type": "string",
          "format": "email",
          "description": "The user's email address."
        },
        "photoURL": {
          "type": "string",
          "format": "uri",
          "description": "URL of the user's profile picture."
        }
      },
      "required": ["displayName", "email"]
    },
    "UserFavorites": {
        "title": "User Favorites",
        "description": "Represents a user's favorite leagues, teams, and players.",
        "type": "object",
        "properties": {
            "leagues": {
                "type": "object",
                "description": "A map of favorite league IDs to league data.",
                "additionalProperties": { "$ref": "#/entities/LeagueFavorite" }
            },
            "teams": {
                "type": "object",
                "description": "A map of favorite team IDs to team data.",
                "additionalProperties": { "$ref": "#/entities/TeamFavorite" }
            },
            "players": {
                "type": "object",
                "description": "A map of favorite player IDs to player data.",
                "additionalProperties": { "$ref": "#/entities/PlayerFavorite" }
            }
        }
    },
    "AdminFavorite": {
      "title": "Admin Favorite",
      "description": "Represents a team and a note favorited by an admin.",
      "type": "object",
      "properties": {
        "teamId": { "type": "number"},
        "name": { "type": "string" },
        "logo": { "type": "string", "format": "uri" },
        "note": { "type": "string" }
      },
      "required": ["teamId", "name", "logo", "note"]
    },
    "LeagueFavorite": {
      "title": "League Favorite",
      "type": "object",
      "properties": {
        "leagueId": { "type": "number" },
        "name": { "type": "string" },
        "logo": { "type": "string", "format": "uri" }
      },
      "required": ["leagueId", "name", "logo"]
    },
    "TeamFavorite": {
      "title": "Team Favorite",
      "type": "object",
      "properties": {
        "teamId": { "type": "number" },
        "name": { "type": "string" },
        "logo": { "type": "string", "format": "uri" }
      },
      "required": ["teamId", "name", "logo"]
    },
     "PlayerFavorite": {
      "title": "Player Favorite",
      "type": "object",
      "properties": {
        "playerId": { "type": "number" },
        "name": { "type": "string" },
        "photo": { "type": "string", "format": "uri" }
      },
      "required": ["playerId", "name", "photo"]
    },
    "LeagueCustomization": {
        "title": "League Customization",
        "description": "Stores user-defined names for leagues.",
        "type": "object",
        "properties": {
            "customName": {
                "type": "string",
                "description": "The custom name for the league."
            }
        },
        "required": ["customName"]
    },
    "CountryCustomization": {
        "title": "Country Customization",
        "description": "Stores user-defined names for countries.",
        "type": "object",
        "properties": {
            "customName": {
                "type": "string",
                "description": "The custom name for the country."
            }
        },
        "required": ["customName"]
    },
    "ContinentCustomization": {
        "title": "Continent Customization",
        "description": "Stores user-defined names for continents.",
        "type": "object",
        "properties": {
            "customName": {
                "type": "string",
                "description": "The custom name for the continent."
            }
        },
        "required": ["customName"]
    },
    "TeamCustomization": {
      "title": "Team Customization",
      "description": "Stores user-defined names for teams.",
      "type": "object",
      "properties": { "customName": { "type": "string" } },
      "required": ["customName"]
    },
    "PlayerCustomization": {
      "title": "Player Customization",
      "description": "Stores user-defined names for players.",
      "type": "object",
      "properties": { "customName": { "type": "string" } },
      "required": ["customName"]
    },
    "CoachCustomization": {
      "title": "Coach Customization",
      "description": "Stores user-defined names for coaches.",
      "type": "object",
      "properties": { "customName": { "type": "string" } },
      "required": ["customName"]
    },
    "MatchDetails": {
      "title": "Match Details",
      "description": "Stores metadata about a match, like whether comments are enabled.",
      "type": "object",
      "properties": {
        "commentsEnabled": {
          "type": "boolean",
          "description": "Whether comments are enabled for this match."
        }
      },
      "required": ["commentsEnabled"]
    },
    "MatchComment": {
      "title": "Match Comment",
      "description": "A single comment on a match, which can be a top-level comment or a reply.",
      "type": "object",
      "properties": {
        "userId": { "type": "string", "description": "The ID of the user who posted the comment." },
        "userName": { "type": "string", "description": "The display name of the user." },
        "userPhoto": { "type": "string", "format": "uri", "description": "The profile picture URL of the user." },
        "text": { "type": "string", "description": "The content of the comment." },
        "timestamp": { "type": "string", "format": "date-time", "description": "The timestamp when the comment was created." }
      },
      "required": ["userId", "userName", "text", "timestamp"]
    },
    "Notification": {
      "title": "Notification",
      "description": "Represents a notification for a user.",
      "type": "object",
      "properties": {
        "recipientId": { "type": "string" },
        "senderId": { "type": "string" },
        "senderName": { "type": "string" },
        "senderPhoto": { "type": "string", "format": "uri" },
        "type": { "type": "string", "enum": ["like", "reply"] },
        "matchId": { "type": "number" },
        "commentId": { "type": "string" },
        "commentText": { "type": "string" },
        "read": { "type": "boolean" },
        "timestamp": { "type": "string", "format": "date-time" }
      },
      "required": ["recipientId", "senderId", "senderName", "type", "matchId", "read", "timestamp"]
    },
    "ManagedCompetition": {
      "title": "Managed Competition",
      "description": "Represents a competition that is managed by an admin.",
      "type": "object",
      "properties": {
        "leagueId": { "type": "number" },
        "name": { "type": "string" },
        "logo": { "type": "string", "format": "uri" },
        "countryName": { "type": "string" },
        "countryFlag": { "type": "string", "format": "uri" }
      },
      "required": ["leagueId", "name", "logo", "countryName"]
    },
    "Prediction": {
      "title": "Match Prediction",
      "description": "A user's prediction for a specific match.",
      "type": "object",
      "properties": {
        "userId": { "type": "string" },
        "fixtureId": { "type": "number" },
        "homeGoals": { "type": "number" },
        "awayGoals": { "type": "number" },
        "points": { "type": "number", "description": "Points awarded for this prediction." },
        "timestamp": { "type": "string", "format": "date-time" }
      },
      "required": ["userId", "fixtureId", "homeGoals", "awayGoals", "timestamp"]
    },
    "UserScore": {
      "title": "User Score",
      "description": "Total prediction score for a user.",
      "type": "object",
      "properties": {
        "userId": { "type": "string" },
        "userName": { "type": "string" },
        "userPhoto": { "type": "string", "format": "uri" },
        "totalPoints": { "type": "number" }
      },
      "required": ["userId", "userName", "totalPoints"]
    },
     "LeaderboardEntry": {
        "title": "Leaderboard Entry",
        "description": "Represents a single entry in the predictions leaderboard.",
        "type": "object",
        "properties": {
            "userId": { "type": "string" },
            "userName": { "type": "string" },
            "userPhoto": { "type": "string", "format": "uri" },
            "points": { "type": "number" }
        },
        "required": ["userId", "userName", "points"]
    },
    "GlobalPredictionMatch": {
      "title": "Global Prediction Match",
      "description": "Represents a single match selected for global predictions.",
      "type": "object",
      "properties": {
        "fixtureId": { "type": "number" },
        "leagueId": { "type": "number" },
        "date": { "type": "string", "format": "date" }
      },
      "required": ["fixtureId", "leagueId", "date"]
    },
    "DailyGlobalPredictions": {
      "title": "Daily Global Predictions",
      "description": "A document containing the list of globally selected matches for a specific day.",
      "type": "object",
      "properties": {
        "selectedByAdmin": { "type": "boolean" },
        "selectedMatches": {
          "type": "array",
          "items": { "$ref": "#/entities/GlobalPredictionMatch" }
        }
      },
      "required": ["selectedByAdmin", "selectedMatches"]
    }
  },
  "auth": {
    "providers": ["google.com"]
  },
  "firestore": {
    "rules": "rules_version = '2';\nservice cloud.firestore {\n  match /databases/{database}/documents {\n\n    // ---------------------------------------------------\n    // Helper Functions and Global Rules\n    // ---------------------------------------------------\n\n    function isAdmin() {\n      // The admin's email address\n      return request.auth != null && request.auth.token.email == \"sagralnarey@gmail.com\";\n    }\n\n    // This rule must come first: Admins can do anything.\n    match /{document=**} {\n      allow read, write: if isAdmin();\n    }\n    \n    // ---------------------------------------------------\n    // App-Specific Rules for Regular Users\n    // ---------------------------------------------------\n\n    match /users/{userId} {\n        // Only the authenticated user can read or write to their own profile\n        allow read, write: if request.auth != null && request.auth.uid == userId;\n    }\n\n    match /users/{userId}/notifications/{notificationId} {\n        // A user can read, update, or delete their own notifications.\n        allow read, update, delete: if request.auth != null && request.auth.uid == userId;\n        // A user can create a notification for another user (e.g., on like/reply).\n        // The senderId must match the authenticated user.\n        allow create: if request.auth != null && request.resource.data.senderId == request.auth.uid;\n    }\n\n    match /favorites/{userId} {\n      // A user can only manage their own favorites document.\n      allow read, write: if request.auth != null && request.auth.uid == userId;\n    }\n\n    match /adminFavorites/{teamId} {\n      // All authenticated users can read the admin favorites.\n      allow read: if request.auth != null;\n    }\n    \n    // Customization collections are public to read for all users\n    match /leagueCustomizations/{leagueId}      { allow read: if request.auth != null; }\n    match /countryCustomizations/{countryName}  { allow read: if request.auth != null; }\n    match /continentCustomizations/{continent} { allow read: if request.auth != null; }\n    match /teamCustomizations/{teamId}          { allow read: if request.auth != null; }\n    match /playerCustomizations/{playerId}      { allow read: if request.auth != null; }\n    match /coachCustomizations/{coachId}        { allow read: if request.auth != null; }\n\n    match /matches/{matchId} {\n      // Any authenticated user can read match metadata (like commentsEnabled).\n      allow read, list: if request.auth != null;\n\n      match /comments/{commentId} {\n        allow read: if request.auth != null;\n        allow create: if request.auth != null;\n        allow update, delete: if request.auth != null && resource.data.userId == request.auth.uid;\n\n        // Likes on comments\n        match /likes/{userId} {\n            allow read: if request.auth != null;\n            // A user can only like with their own ID.\n            allow create, delete: if request.auth.uid == userId;\n        }\n\n        // Replies under comments\n        match /replies/{replyId} {\n            allow read: if request.auth != null;\n            allow create: if request.auth != null;\n            allow update, delete: if request.auth != null && resource.data.userId == request.auth.uid;\n\n            // Likes on replies\n            match /likes/{userId} {\n                allow read: if request.auth != null;\n                allow create, delete: if request.auth.uid == userId;\n            }\n        }\n      }\n    }\n\n    match /managedCompetitions/{leagueId} {\n      // All authenticated users can read the list of managed competitions.\n      allow read: if request.auth != null;\n    }\n    \n    match /leaderboard/{userId} {\n      // All authenticated users can read the leaderboard.\n      allow read, list: if request.auth != null;\n    }\n    \n    match /dailyGlobalPredictions/{date} {\n      // All authenticated users can read the daily list of matches for prediction.\n      allow read, list: if request.auth != null;\n    }\n\n    match /predictions/{predictionId} {\n        // Allow a user to create/update their own prediction document.\n        allow write: if request.auth != null && request.resource.data.userId == request.auth.uid;\n        // Allow a user to read their own prediction document directly (if needed).\n        allow get: if request.auth != null && resource.data.userId == request.auth.uid;\n        // Allow a user to list their own predictions via a simple query.\n        allow list: if request.auth != null && request.query.where.to_list()[0][2] == request.auth.uid;\n    }\n  }\n}\n"
  },
    "/users/{userId}": {
      "schema": { "$ref": "#/entities/UserProfile" },
      "description": "Stores public profile information for each user."
    },
    "/users/{userId}/notifications/{notificationId}": {
        "schema": { "$ref": "#/entities/Notification" },
        "description": "Stores notifications for a specific user."
    },
    "/favorites/{userId}": {
      "schema": { "$ref": "#/entities/UserFavorites" },
      "description": "A single document containing all favorites for a user."
    },
    "/adminFavorites/{teamId}": {
      "schema": { "$ref": "#/entities/AdminFavorite" },
      "description": "Stores admin-favorited teams and their notes, keyed by team ID."
    },
    "/leagueCustomizations/{leagueId}": {
        "schema": { "$ref": "#/entities/LeagueCustomization" },
        "description": "Stores custom names for leagues, keyed by league ID."
    },
    "/countryCustomizations/{countryName}": {
        "schema": { "$ref": "#/entities/CountryCustomization" },
        "description": "Stores custom names for countries, keyed by the English country name."
    },
    "/continentCustomizations/{continentName}": {
        "schema": { "$ref": "#/entities/ContinentCustomization" },
        "description": "Stores custom names for continents, keyed by the English continent name."
    },
    "/teamCustomizations/{teamId}": {
      "schema": { "$ref": "#/entities/TeamCustomization" },
      "description": "Stores custom names for teams, keyed by team ID."
    },
    "/playerCustomizations/{playerId}": {
      "schema": { "$ref": "#/entities/PlayerCustomization" },
      "description": "Stores custom names for players, keyed by player ID."
    },
    "/coachCustomizations/{coachId}": {
      "schema": { "$ref": "#/entities/CoachCustomization" },
      "description": "Stores custom names for coaches, keyed by coach ID."
    },
    "/matches/{matchId}": {
      "schema": { "$ref": "#/entities/MatchDetails" },
      "description": "Stores metadata for a specific match, identified by its unique ID."
    },
    "/matches/{matchId}/comments/{commentId}": {
      "schema": { "$ref": "#/entities/MatchComment" },
      "description": "Stores all comments and their replies for a specific match. Replies are nested within parent comment documents."
    },
    "/managedCompetitions/{leagueId}": {
      "schema": { "$ref": "#/entities/ManagedCompetition" },
      "description": "Stores the list of competitions managed by the admin."
    },
    "/predictions/{predictionId}": {
      "schema": { "$ref": "#/entities/Prediction" },
      "description": "Stores user predictions for matches. ID is a composite of userId and fixtureId."
    },
    "/leaderboard/{userId}": {
      "schema": { "$ref": "#/entities/LeaderboardEntry" },
      "description": "Stores user scores for the prediction leaderboard."
    },
    "/dailyGlobalPredictions/{date}": {
        "schema": { "$ref": "#/entities/DailyGlobalPredictions" },
        "description": "Stores the list of globally-predictable matches for a given day (date format YYYY-MM-DD)."
    }
  }
}

    