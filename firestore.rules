/**
  * @description This ruleset enforces a strict user-ownership model for user-specific data and restricts administrative data to authenticated admins. Public data is readable by all.
  * @dataStructure
  *   - `/users/{userId}`: Stores user profile information, accessible only to the user.
  *   - `/competitions/{competitionId}`: Stores competition data, publicly readable, but only admins can modify.
  *   - `/teams/{teamId}`: Stores team data, publicly readable, but only admins can modify.
  *   - `/matches/{matchId}`: Stores match data, publicly readable.
  *   - `/news/{newsId}`: Stores news articles, publicly readable, but only admins can modify.
  *   - `/admins/{adminId}`: Stores admin user data. Only admins can manage admin accounts.
  *   - `/users/{userId}/favorites`: Stores user's favorite teams and competitions, accessible only to the user.
  *   - `/topCompetitions/{competitionId}`: Stores top competitions, publicly readable, but only admins can modify.
  *   - `/topTeams/{teamId}`: Stores top teams, publicly readable, but only admins can modify.
  *   - `/leagueCustomizations/{leagueId}`: Stores league customizations, only admins can modify.
  *   - `/teamCustomizations/{teamId}`: Stores team customizations, only admins can modify.
  *   - `/playerCustomizations/{playerId}`: Stores player customizations, only admins can modify.
  *   - `/continentCustomizations/{continentId}`: Stores continent customizations, only admins can modify.
  *   - `/countryCustomizations/{countryId}`: Stores country customizations, only admins can modify.
  *   - `/pinnedIraqiMatch/special`: Stores special pinned match details, only admins can modify.
  * @keySecurityDecisions
  *   - User data is strictly controlled by the owning user.
  *   - Admin management is restricted to authenticated admins. The existence of a document in `/admins/{adminId}` indicates admin status.
  *   - Public data (competitions, teams, matches, news) is readable by all users.
  *   - Listing of admins is forbidden.
  * @denormalizationForAuthorization
  *   - Admin status is checked via document existence in `/admins/{adminId}`, avoiding complex role-based queries.
  * @structuralSegregation
  *   - Publicly readable data is stored in top-level collections (e.g., `/competitions`, `/teams`, `/matches`, `/news`).
  */
 

 rules_version = '2';
 service cloud.firestore {
  match /databases/{database}/documents {
 

   function isSignedIn() {
    return request.auth != null;
   }
 

   function isOwner(userId) {
    return isSignedIn() && request.auth.uid == userId;
   }
 

   function isAdmin() {
    return isSignedIn() && exists(/databases/$(database)/documents/admins/$(request.auth.uid));
   }
 

   function isExistingOwner(userId) {
    return isOwner(userId) && resource != null;
   }
 

   /**
    * @description Controls access to user profile information. Only the user can read/write their own profile.
    * @path /users/{userId}
    * @allow (create) - Authenticated user with matching UID can create their profile.
    * @allow (get, update, delete) - Authenticated user with matching UID can read/write their profile.
    * @deny (create, get, update, delete) - Any other user.
    * @principle Enforces document ownership for writes.
    */
   match /users/{userId} {
    allow get: if isOwner(userId);
    allow list: if false;
    allow create: if isOwner(userId) && request.resource.data.id == request.auth.uid;
    allow update: if isExistingOwner(userId) && request.resource.data.id == resource.data.id;
    allow delete: if isExistingOwner(userId);
   }
 

   /**
    * @description Controls access to competition data. Publicly readable, but only admins can create/update/delete.
    * @path /competitions/{competitionId}
    * @allow (get, list) - Any user can read.
    * @allow (create, update, delete) - Only authenticated admins can modify.
    * @deny (create, update, delete) - Any non-admin user.
    * @principle Restricts write access to administrators.
    */
   match /competitions/{competitionId} {
    allow get, list: if true;
    allow create: if isAdmin();
    allow update: if isAdmin() && resource != null;
    allow delete: if isAdmin() && resource != null;
   }
 

   /**
    * @description Controls access to team data. Publicly readable, but only admins can create/update/delete.
    * @path /teams/{teamId}
    * @allow (get, list) - Any user can read.
    * @allow (create, update, delete) - Only authenticated admins can modify.
    * @deny (create, update, delete) - Any non-admin user.
    * @principle Restricts write access to administrators.
    */
   match /teams/{teamId} {
    allow get, list: if true;
    allow create: if isAdmin();
    allow update: if isAdmin() && resource != null;
    allow delete: if isAdmin() && resource != null;
   }
 

   /**
    * @description Controls access to match data. Publicly readable.
    * @path /matches/{matchId}
    * @allow (get, list) - Any user can read.
    * @deny (create, update, delete) - No one can modify.
    * @principle Allows public read access.
    */
   match /matches/{matchId} {
    allow get, list: if true;
    allow create: if false;
    allow update: if false;
    allow delete: if false;
   }
 

   /**
    * @description Controls access to news articles. Publicly readable, but only admins can create/update/delete.
    * @path /news/{newsId}
    * @allow (get, list) - Any user can read.
    * @allow (create, update, delete) - Only authenticated admins can modify.
    * @deny (create, update, delete) - Any non-admin user.
    * @principle Restricts write access to administrators.
    */
   match /news/{newsId} {
    allow get, list: if true;
    allow create: if isAdmin();
    allow update: if isAdmin() && resource != null;
    allow delete: if isAdmin() && resource != null;
   }
 

   /**
    * @description Controls access to admin user data. Only admins can create/update/delete other admins. Normal users can't read.
    * @path /admins/{adminId}
    * @allow (create, update, delete) - Only authenticated admins can modify.
    * @deny (get, list) - Normal users can't read.
    * @principle Restricts admin management to other administrators.
    */
   match /admins/{adminId} {
    allow get: if isAdmin();
    allow list: if false;
    allow create: if isAdmin();
    allow update: if isAdmin() && resource != null;
    allow delete: if isAdmin() && resource != null;
   }
 

   /**
    * @description Controls access to user's favorite teams and competitions. Only the user can read/write their own favorites.
    * @path /users/{userId}/favorites
    * @allow (create, get, update, delete) - Authenticated user with matching UID can read/write their own favorites.
    * @deny (create, get, update, delete) - Any other user.
    * @principle Enforces document ownership for writes.
    */
   match /users/{userId}/favorites {
    allow get: if isOwner(userId);
    allow list: if isOwner(userId);
    allow create: if isOwner(userId) && request.resource.data.userId == request.auth.uid;
    allow update: if isExistingOwner(userId) && request.resource.data.userId == resource.data.userId;
    allow delete: if isExistingOwner(userId);
   }
  /**
    * @description Controls access to top competitions. Publicly readable, but only admins can create/update/delete.
    * @path /topCompetitions/{competitionId}
    * @allow (get, list) - Any user can read.
    * @allow (create, update, delete) - Only authenticated admins can modify.
    * @deny (create, update, delete) - Any non-admin user.
    * @principle Restricts write access to administrators.
    */
   match /topCompetitions/{competitionId} {
    allow get, list: if true;
    allow create: if isAdmin();
    allow update: if isAdmin() && resource != null;
    allow delete: if isAdmin() && resource != null;
   }
 

   /**
    * @description Controls access to top teams. Publicly readable, but only admins can create/update/delete.
    * @path /topTeams/{teamId}
    * @allow (get, list) - Any user can read.
    * @allow (create, update, delete) - Only authenticated admins can modify.
    * @deny (create, update, delete) - Any non-admin user.
    * @principle Restricts write access to administrators.
    */
   match /topTeams/{teamId} {
    allow get, list: if true;
    allow create: if isAdmin();
    allow update: if isAdmin() && resource != null;
    allow delete: if isAdmin() && resource != null;
   }
 

      /**
    * @description Stores custom names for leagues set by admins. Only admins can modify.
    * @path /leagueCustomizations/{leagueId}
    */
   match /leagueCustomizations/{leagueId} {
        allow get, list: if true;
        allow create: if isAdmin();
        allow update: if isAdmin() && resource != null;
        allow delete: if isAdmin() && resource != null;
    }
 

    /**
     * @description Stores custom names for teams set by admins.
     * @path /teamCustomizations/{teamId}
     */
   match /teamCustomizations/{teamId} {
        allow get, list: if true;
        allow create: if isAdmin();
        allow update: if isAdmin() && resource != null;
        allow delete: if isAdmin() && resource != null;
    }
 

    /**
     * @description Stores custom names for players set by admins.
     * @path /playerCustomizations/{playerId}
     */
   match /playerCustomizations/{playerId} {
        allow get, list: if true;
        allow create: if isAdmin();
        allow update: if isAdmin() && resource != null;
        allow delete: if isAdmin() && resource != null;
    }
 

    /**
     * @description Stores custom names for continents set by admins.
     * @path /continentCustomizations/{continentId}
     */
   match /continentCustomizations/{continentId} {
        allow get, list: if true;
        allow create: if isAdmin();
        allow update: if isAdmin() && resource != null;
        allow delete: if isAdmin() && resource != null;
    }
 

    /**
     * @description Stores custom names for countries set by admins.
     * @path /countryCustomizations/{countryId}
     */
   match /countryCustomizations/{countryId} {
        allow get, list: if true;
        allow create: if isAdmin();
        allow update: if isAdmin() && resource != null;
        allow delete: if isAdmin() && resource != null;
    }
 

      /**
       * @description Stores the details of a single pinned Iraqi match, managed by an admin.
       * @path /pinnedIraqiMatch/special
       */
   match /pinnedIraqiMatch/special {
        allow get, list: if true;
        allow create: if isAdmin();
        allow update: if isAdmin() && resource != null;
        allow delete: if isAdmin() && resource != null;
    }
  }
 }